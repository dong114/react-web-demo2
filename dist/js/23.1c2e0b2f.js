webpackJsonp([23],{1957:function(r,n){r.exports=">\r\n## 该页面的 DescriptionList/Description 组件封装的很好， 测试目的，  做了还原 ##\r\n\r\n\r\n```\r\n\r\nconst DescriptionList = ({\r\n  className,\r\n  title,\r\n  col = 3,\r\n  layout = 'horizontal',\r\n  gutter = 32,\r\n  children,\r\n  size,\r\n  ...restProps\r\n}) => {\r\n  const clsString = classNames(styles.descriptionList, styles[layout], className, {\r\n    [styles.small]: size === 'small',\r\n    [styles.large]: size === 'large',\r\n  });\r\n  const column = col > 4 ? 4 : col;\r\n  return (\r\n    <div className={clsString} {...restProps}>\r\n      {title ? <div className={styles.title}>{title}</div> : null}\r\n      <Row gutter={gutter}>\r\n        {React.Children.map(\r\n          children,\r\n          child => (child ? React.cloneElement(child, { column }) : child)\r\n        )}\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n```\r\n\r\n```\r\nconst Description = ({ term, column, className, children, ...restProps }) => {\r\n  const clsString = classNames(styles.description, className);\r\n  return (\r\n    <Col className={clsString} {...responsive[column]} {...restProps}>\r\n      {term && <div className={styles.term}>{term}</div>}\r\n      {children !== null &&\r\n        children !== undefined && <div className={styles.detail}>{children}</div>}\r\n    </Col>\r\n  );\r\n};\r\n\r\nDescription.defaultProps = {\r\n  term: '',\r\n};\r\n\r\nDescription.propTypes = {\r\n  term: PropTypes.node,\r\n};\r\n```"}});